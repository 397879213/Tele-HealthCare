/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministratorWorkArea;

import Business.DrugCatalog.Drug;
import Business.DrugSupplier.Supplier;
import Business.DrugSupplier.SupplierDirectory;
import Business.Enterprise.Enterprise;
import Business.OrderCatalog.Order;
import Business.OrderCatalog.OrderCatalog;
import Business.OrderCatalog.OrderItem;
import Business.Organization.AdminOrganization;
import Business.Organization.Organization;
import Business.ProductCatalog.Product;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MedicineWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Font;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Neelu
 */
public class ManageInventoryJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private SupplierDirectory supplierDirectory;
    private Enterprise enterprise;
    private Order order;
    private OrderCatalog orderCatalog;
    private UserAccount userAccount;
    private static final int SUBTRACT =-1;
    private static final int ADD=-1;
    
    /**
     * Creates new form ManageInventory1JPanel
     */
    public ManageInventoryJPanel(JPanel upc, Enterprise e, UserAccount ua) {
        initComponents();
        userProcessContainer = upc;
        enterprise = e;
        orderCatalog = enterprise.getOrderCatalog();
        order = new Order();
        userAccount =ua;
        
        supplierDirectory = enterprise.getSupplierDirectory();
        
        
        
        
        populateTable();
         populateSuppliers();
        populateProductsBySupplier();
        
        workRequestJTable.getTableHeader().setFont(new Font("Tahoma", Font.PLAIN, 18));
        
    }

    public void populateSuppliers(){
        suppComboBox1.removeAllItems();
        for(Supplier supplier: enterprise.getSupplierDirectory().getSupplierList()){
            suppComboBox1.addItem(supplier);
        }
         }
       
       private void populateProductsBySupplier(){
        
        DefaultTableModel dtm = (DefaultTableModel) productTable.getModel();
        dtm.setRowCount(0);
        
        Supplier supplier = (Supplier) suppComboBox1.getSelectedItem();
        
        if(supplier!=null){
            for(Drug product: supplier.getProductCatalog().getProductList()){
            Object[] row = createRow(product);
            dtm.addRow(row);
        }
        }
        
    }
       private Object[] createRow(Drug product){
        
        Object[] row = new Object[4];
        
        row[0] = product;
        row[1] = product.getModelNumber();
        row[2] = product.getPrice();
        row[3] = product.getAvailableQuantity();
        return row;
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        refreshJButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        suppComboBox1 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        viewProdjButton2 = new javax.swing.JButton();
        priceField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        quantitySpinner = new javax.swing.JSpinner();
        addtoCartButton6 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        btnModifyQuantity = new javax.swing.JButton();
        txtNewQuantity = new javax.swing.JTextField();
        btnCheckOut = new javax.swing.JButton();
        btnRemoveOrderItem = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        medRequestTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Manage Inventory");

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setText("Check Requests For Medicines");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(338, 16, -1, -1));

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 130, -1, -1));

        workRequestJTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Doctor Name", "Message", "Receiver", "Status", "Resolve Date", "Medicine Name", "Quantity Ordered"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(workRequestJTable);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 930, 120));

        assignJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 380, -1, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jButton1.setText("Set Status");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 380, 130, -1));

        backJButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 520, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel10.setText("Check Doctor's Request");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, -1, -1));

        jTabbedPane1.addTab("Check Requests", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Browse Item Catalog");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Supplier");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 110, 30));

        suppComboBox1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        suppComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suppComboBox1ActionPerformed(evt);
            }
        });
        jPanel2.add(suppComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, 250, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Supplier Product Catalog");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 240, -1));

        productTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Product Id", "Price", "Avail"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(productTable);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 590, 100));

        viewProdjButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        viewProdjButton2.setText("View Product Detail");
        viewProdjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewProdjButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(viewProdjButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 222, 240, -1));
        jPanel2.add(priceField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 310, 60, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Price");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 310, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Quantity:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 310, 90, 20));

        quantitySpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jPanel2.add(quantitySpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 310, 80, -1));

        addtoCartButton6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        addtoCartButton6.setText("ADD TO CART");
        addtoCartButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtoCartButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(addtoCartButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 330, -1, -1));

        orderTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item Name", "Price", "Quantity", "Total Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orderTable);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 400, 580, 110));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Item in cart");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, -1, -1));

        btnModifyQuantity.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnModifyQuantity.setText("Modify Quantity");
        btnModifyQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyQuantityActionPerformed(evt);
            }
        });
        jPanel2.add(btnModifyQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 530, -1, -1));
        jPanel2.add(txtNewQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 530, 100, -1));

        btnCheckOut.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnCheckOut.setText("Check out");
        btnCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckOutActionPerformed(evt);
            }
        });
        jPanel2.add(btnCheckOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 590, 150, -1));

        btnRemoveOrderItem.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnRemoveOrderItem.setText("Remove");
        btnRemoveOrderItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveOrderItemActionPerformed(evt);
            }
        });
        jPanel2.add(btnRemoveOrderItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 530, -1, -1));

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel2.add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 670, 150, 40));

        medRequestTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        medRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Medicine Requested", "Quantity"
            }
        ));
        jScrollPane4.setViewportView(medRequestTable);

        jPanel2.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 20, 360, 80));

        jTabbedPane1.addTab("Browse Inventory", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(355, 355, 355)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void suppComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suppComboBox1ActionPerformed
        // TODO add your handling code here:

        populateProductsBySupplier();
    }//GEN-LAST:event_suppComboBox1ActionPerformed

    private void viewProdjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewProdjButton2ActionPerformed
        // TODO add your handling code here:

        Drug product = (Drug) selectedItemInTable(productTable);
        if(product!=null){
            ViewProductJPanel panel = new ViewProductJPanel(userProcessContainer,product);
            userProcessContainer.add("ViewProductDetailJPanel",panel);
            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
            cardLayout.next(userProcessContainer);
        }
    }//GEN-LAST:event_viewProdjButton2ActionPerformed

    private Object selectedItemInTable(JTable table){
        int selectedRow = table.getSelectedRow();
        if(selectedRow>=0){
            Object object = table.getValueAt(selectedRow, 0);
            return object;
        }else{
            JOptionPane.showMessageDialog(null, "Selected one row");
            return null;
        
        }
        
    }
    private void addtoCartButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtoCartButton6ActionPerformed
        // TODO add your handling code here:

        Drug product = (Drug) selectedItemInTable(productTable);
        int quantity = (Integer) quantitySpinner.getValue();

        if(product!= null && isAvailable(product, quantity) && isValidPrice()){
            addToOrder(product, quantity);
            updateQuantity(product, quantity, SUBTRACT);

            populateOrderTable();
            populateProductsBySupplier();

        }else{
            JOptionPane.showMessageDialog(null,"Wrong quantity or price");
            return;
        }
    }//GEN-LAST:event_addtoCartButton6ActionPerformed

    private void populateOrderTable(){
        DefaultTableModel dtm = (DefaultTableModel) orderTable.getModel();
        dtm.setRowCount(0);
        
        for(OrderItem orderItem:order.getOrderList()){
            
            Object[] row = new Object[4];
            row[0]= orderItem;
            row[1] = orderItem.getSalesPrice();
            row[2]= orderItem.getQuantity();
            row[3] = orderItem.getQuantity()* orderItem.getSalesPrice();
            
            dtm.addRow(row);
        }
        
        
    }
    private void updateQuantity(Drug product, int quantity, int flag){
        if(flag==SUBTRACT){
            int newAmount = product.getAvailableQuantity() - quantity;
            product.setAvailableQuantity(newAmount);
        }else if(flag==ADD){
            int newAmount = product.getAvailableQuantity() + quantity;
            product.setAvailableQuantity(newAmount);
        }
        
    }
    private void addToOrder(Drug product, int quantity){
       
        
        OrderItem orderItem = order.searchOrderItemByProduct(product);
        if(orderItem!=null){
            orderItem.setQuantity(orderItem.getQuantity()+quantity);
        }else{
            
            
            
           
            int sellPrice = Integer.parseInt(priceField.getText());
            order.addOrderItem(product, quantity, sellPrice);
            
            
        }
        
        
        
    }
    private boolean isAvailable(Drug product, int quantity){
        return(quantity>0) && (quantity<=product.getAvailableQuantity());
        
        
    }
    private boolean isValidPrice(){
        Drug product = (Drug) selectedItemInTable(productTable);
        int price = Integer.parseInt(priceField.getText());
        
        return (product.getPrice()==price);
        
        
    }
    
    private void btnModifyQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyQuantityActionPerformed
        // TODO add your handling code here:

        String inputNum = txtNewQuantity.getText();
        int selectedRow = orderTable.getSelectedRow();

        if((!inputNum.isEmpty()) && selectedRow>0){
            int newQuantity = Integer.parseInt(inputNum);
            OrderItem orderItem = (OrderItem) orderTable.getValueAt(selectedRow, 0);

            int diff = orderItem.getQuantity() - newQuantity;
            Drug product = orderItem.getDrug();
            updateQuantity(product, diff, ADD);

            orderItem.setQuantity(newQuantity);

            populateOrderTable();
            populateProductsBySupplier();
        }
    }//GEN-LAST:event_btnModifyQuantityActionPerformed

    private void btnCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckOutActionPerformed
        // TODO add your handling code here:
        int selectedRow = medRequestTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a Medicine from the Medicine Request Table");
            return;
        }

        Drug prod = (Drug)medRequestTable.getValueAt(selectedRow, 0);
        int quant = (Integer) quantitySpinner.getValue();
        
        Product p1 = enterprise.getProductCatalog().searchProduct(prod.getProductName());
        
        
        
             if(p1!=null){
                p1.setAvailableAmount(p1.getAvailableAmount()+quant);
               
            }
            else {
                
            Product p =  enterprise.getProductCatalog().addProduct();
               p.setProdName(prod.getProductName());
               p.setAvailableAmount(quant);
               p.setModelNumber(prod.getModelNumber());
               p.setPrice(prod.getPrice());
            }
        
        
        
        if(order.getOrderList().size()>0){
            orderCatalog.addOrder(order);
            order = new Order();
            populateOrderTable();
            
            JOptionPane.showMessageDialog(null,"Hospital Inventory and Order Catalog Updated");
            return;
        }else{
            JOptionPane.showMessageDialog(null, "Shopping cart is empty!");
            return;
        }
    }//GEN-LAST:event_btnCheckOutActionPerformed

   
    
    private void btnRemoveOrderItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveOrderItemActionPerformed

        OrderItem orderItem = (OrderItem) selectedItemInTable(orderTable);

        order.removeOrderItem(orderItem);
        updateQuantity(orderItem.getDrug(), orderItem.getQuantity(), ADD);
        populateOrderTable();
        populateProductsBySupplier();
    }//GEN-LAST:event_btnRemoveOrderItemActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);

        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

        MedicineWorkRequest request = (MedicineWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Processing");
        request.setResult("Pending");
        
        
        populateTable();
        populateMedicineTable(request);
        
       
    }//GEN-LAST:event_assignJButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a Row!");
            return;
        }
        
        MedicineWorkRequest request = (MedicineWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Ordered");
        request.setResult("Added to Inventory");
        request.setStatus("Completed");
        
        
        Date date = new Date();
        request.setResolveDate(date);
        populateTable();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    public void populateMedicineTable(MedicineWorkRequest request){
        DefaultTableModel model = (DefaultTableModel) medRequestTable.getModel();
        
        model.setRowCount(0);
        
            Object[] row = new Object[2];
            row[0] = request.getProduct();
            row[1] = request.getQuantityOrdered();
              model.addRow(row);
            
    
        
        
    }
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        
        model.setRowCount(0);
        
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof AdminOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            for(WorkRequest request : org.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[7];
            row[0] = request;
            row[1] = request.getMessage();
            row[2] = request.getReceiver() == null ? "Waiting" : request.getReceiver().getEmployee().getName();
            row[3] = request.getStatus();
            row[4] = request.getResolveDate();
            Drug medName = ((MedicineWorkRequest) request).getProduct();
            row[5] = medName;
            int quant = ((MedicineWorkRequest) request).getQuantityOrdered();
            row[6] = quant;
            
            model.addRow(row);
        }
        }
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addtoCartButton6;
    private javax.swing.JButton assignJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCheckOut;
    private javax.swing.JButton btnModifyQuantity;
    private javax.swing.JButton btnRemoveOrderItem;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable medRequestTable;
    private javax.swing.JTable orderTable;
    private javax.swing.JTextField priceField;
    private javax.swing.JTable productTable;
    private javax.swing.JSpinner quantitySpinner;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JComboBox suppComboBox1;
    private javax.swing.JTextField txtNewQuantity;
    private javax.swing.JButton viewProdjButton2;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
