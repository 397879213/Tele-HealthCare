/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministratorWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.MedicalRecords.MedicalRecord;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.SystemAdminWorkArea.*;

/**
 *
 * @author Neelu
 */
public class CentralDatabaseJPanel extends javax.swing.JPanel {

    private Enterprise enterprise;
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private EcoSystem system;
    /**
     * Creates new form CentralDatabaseJPanel
     */
    public CentralDatabaseJPanel(JPanel upc, Enterprise e, UserAccount ua, EcoSystem s) {
        initComponents();
        userProcessContainer = upc;
        enterprise = e;
        userAccount = ua;
        system = s;
        
        populateNetworkTable();
    }
    
    public void populateNetworkTable(){
         DefaultTableModel dtm = (DefaultTableModel)netTable.getModel();
        
        int rowcount = netTable.getRowCount();
        
        for(int i =rowcount-1;i>=0;i--){
        dtm.removeRow(i);
    }
        
        
        
        for(Network network: system.getNetworkList()){
            Object row[] = new Object[1];
            row[0] = network;
            
            dtm.addRow(row);
        }
        
       
    }

     public void populatePatientName(){
         
          DefaultTableModel dtm = (DefaultTableModel)patTable.getModel();
        
        int rowcount = patTable.getRowCount();
        
        for(int i =rowcount-1;i>=0;i--){
        dtm.removeRow(i);
    }
         
         
         int selectedRow = netTable.getSelectedRow();
        if(selectedRow>=0){
            Network network = (Network) netTable.getValueAt(selectedRow, 0);
            
            //Enter the enterprise
            for(Enterprise ent: network.getEnterpriseDirectory().getEnterpriseList()){
                
                //Check the enterprise to make sure it belongs to the same Hospital chain
                if(ent.getName().equalsIgnoreCase(enterprise.getName())){
                    
                    //Enter patient organization
                    for(Organization org:ent.getOrganizationDirectory().getOrganizationList()){
                        
                        //Check if employee is from patient organization 
                       if(org instanceof PatientOrganization){
                           
                           for(Employee emp:org.getEmployeeDirectory().getEmployeeList()){
                            
                            Object row[] = new Object[1];
                                String patName = emp.getName();
                                row[0] = patName ==null ? "No Patient Admitted Yet!" : emp;
                                
                                dtm.addRow(row);
                            
                        }
                           
                           
                       } 
                       
                        
                    }
                    
                    
                }
            }
            
            
            
        }
         else{
            JOptionPane.showMessageDialog(null, "Please select a network first!");
        }
         
         
         
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        netTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        patTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        medicalTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Centralized Medical Record Database");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 16, -1, 44));

        netTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        netTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "State Name"
            }
        ));
        jScrollPane1.setViewportView(netTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 102, 273, 103));

        patTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Patient Name"
            }
        ));
        jScrollPane2.setViewportView(patTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(217, 240, 273, 103));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Select Network");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 102, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Select Patient");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 240, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("View Medical Records");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 415, -1, -1));

        medicalTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        medicalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Abuse Factor", "Treated For", "Allergy", "Feeding Status", "Food Intake", "Special Needs", "Amino Acid", "Fat Emulsion", "Protein Intake", "Medicine Prescribed"
            }
        ));
        jScrollPane3.setViewportView(medicalTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, 1440, 202));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Select");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(538, 102, 121, -1));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("Select");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(538, 240, 121, -1));

        backJButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 700, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        populatePatientName();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        populateMedicalRecords();
    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    public void populateMedicalRecords(){
         DefaultTableModel dtm = (DefaultTableModel)medicalTable.getModel();
        
        int rowcount = medicalTable.getRowCount();
        
        for(int i =rowcount-1;i>=0;i--){
        dtm.removeRow(i);
    }
        
        int selectedRow = patTable.getSelectedRow();
        if(selectedRow>=0){
                        Employee patient = (Employee) patTable.getValueAt(selectedRow, 0);
                          Object row[] = new Object[10];
                            String abuse = patient.getMedicalRecord().getAbuseFactor();
                            row[0] = abuse == null ? "Not Diagnosed Yet" : patient.getMedicalRecord().getAbuseFactor();
                            
                            String treated = patient.getMedicalRecord().getTreatedFor();
                            row[1]= treated == null ? "Not Diagnosed Yet" : patient.getMedicalRecord().getTreatedFor();
                            
                            String allergy = patient.getMedicalRecord().getAllergies();
                            row[2]= allergy == null ? "Not Diagnosed Yet" : patient.getMedicalRecord().getAllergies();
                            
                            String feed = patient.getMedicalRecord().getFeedingStatus();
                            row[3]=feed == null ? "Not Diagnosed Yet" : patient.getMedicalRecord().getFeedingStatus();
                            
                            String food = patient.getMedicalRecord().getFoodIntake();
                            row[4]= food == null ? "Not Diagnosed Yet" : patient.getMedicalRecord().getFoodIntake();
                            
                            String special = patient.getMedicalRecord().getSpecialNeeds();
                            row[5]= special == null ? "Not Diagnosed Yet" : patient.getMedicalRecord().getSpecialNeeds();
                            
                            String amino = patient.getMedicalRecord().getAminoAcid();
                            row[6]= amino == null ? "Not Diagnosed Yet" :patient.getMedicalRecord().getAminoAcid();
                            
                            String fat = patient.getMedicalRecord().getFatEmulsion();
                            row[7]= fat == null ? "Not Diagnosed Yet" :patient.getMedicalRecord().getFatEmulsion();
                            
                            String protien = patient.getMedicalRecord().getProtienIntake();
                            row[8]= protien == null ? "Not Diagnosed Yet" :patient.getMedicalRecord().getProtienIntake();
                            
                            String med = patient.getMedicalRecord().getMedicinePrescribed();
                            row[9]= med == null ? "Not Diagnosed Yet" :patient.getMedicalRecord().getMedicinePrescribed();
                            dtm.addRow(row);
                }else{
            JOptionPane.showMessageDialog(null, "Please select a patient first!");
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable medicalTable;
    private javax.swing.JTable netTable;
    private javax.swing.JTable patTable;
    // End of variables declaration//GEN-END:variables
}
